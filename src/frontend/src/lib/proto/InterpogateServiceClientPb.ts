/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.25.0
// source: interpogate.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as interpogate_pb from './interpogate_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class InterpogateClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetTokens = new grpcWeb.MethodDescriptor(
    '/Interpogate/GetTokens',
    grpcWeb.MethodType.UNARY,
    interpogate_pb.TokenizeRequest,
    interpogate_pb.TokenizeResponse,
    (request: interpogate_pb.TokenizeRequest) => {
      return request.serializeBinary();
    },
    interpogate_pb.TokenizeResponse.deserializeBinary
  );

  getTokens(
    request: interpogate_pb.TokenizeRequest,
    metadata: grpcWeb.Metadata | null): Promise<interpogate_pb.TokenizeResponse>;

  getTokens(
    request: interpogate_pb.TokenizeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interpogate_pb.TokenizeResponse) => void): grpcWeb.ClientReadableStream<interpogate_pb.TokenizeResponse>;

  getTokens(
    request: interpogate_pb.TokenizeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interpogate_pb.TokenizeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Interpogate/GetTokens',
        request,
        metadata || {},
        this.methodDescriptorGetTokens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Interpogate/GetTokens',
    request,
    metadata || {},
    this.methodDescriptorGetTokens);
  }

  methodDescriptorGetVocab = new grpcWeb.MethodDescriptor(
    '/Interpogate/GetVocab',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    interpogate_pb.VocabResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    interpogate_pb.VocabResponse.deserializeBinary
  );

  getVocab(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<interpogate_pb.VocabResponse>;

  getVocab(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interpogate_pb.VocabResponse) => void): grpcWeb.ClientReadableStream<interpogate_pb.VocabResponse>;

  getVocab(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interpogate_pb.VocabResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Interpogate/GetVocab',
        request,
        metadata || {},
        this.methodDescriptorGetVocab,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Interpogate/GetVocab',
    request,
    metadata || {},
    this.methodDescriptorGetVocab);
  }

  methodDescriptorExtractModelGraph = new grpcWeb.MethodDescriptor(
    '/Interpogate/ExtractModelGraph',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    interpogate_pb.ExtractModelGraphResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    interpogate_pb.ExtractModelGraphResponse.deserializeBinary
  );

  extractModelGraph(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<interpogate_pb.ExtractModelGraphResponse>;

  extractModelGraph(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: interpogate_pb.ExtractModelGraphResponse) => void): grpcWeb.ClientReadableStream<interpogate_pb.ExtractModelGraphResponse>;

  extractModelGraph(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: interpogate_pb.ExtractModelGraphResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Interpogate/ExtractModelGraph',
        request,
        metadata || {},
        this.methodDescriptorExtractModelGraph,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Interpogate/ExtractModelGraph',
    request,
    metadata || {},
    this.methodDescriptorExtractModelGraph);
  }

  methodDescriptorRunModelForward = new grpcWeb.MethodDescriptor(
    '/Interpogate/RunModelForward',
    grpcWeb.MethodType.SERVER_STREAMING,
    interpogate_pb.RunModelForwardRequest,
    interpogate_pb.RunModelForwardResponse,
    (request: interpogate_pb.RunModelForwardRequest) => {
      return request.serializeBinary();
    },
    interpogate_pb.RunModelForwardResponse.deserializeBinary
  );

  runModelForward(
    request: interpogate_pb.RunModelForwardRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<interpogate_pb.RunModelForwardResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/Interpogate/RunModelForward',
      request,
      metadata || {},
      this.methodDescriptorRunModelForward);
  }

}

